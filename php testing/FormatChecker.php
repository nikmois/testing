<?php

// Класс для проверки строчек на соответствие указанному формату
// Все методы принимают строку, и проверяют, соответствует ли она
// указанному формату (в полном объеме, лишних символов не должно
// быть ни до, ни после).
class FormatChecker
{
	protected $case_insensitive = false;
	
	// Принимает: целое число в двоичном представлении
	// Цифры: 0,1
	// Впереди может быть маркер 0b
	// Любые другие символы недопустимы
	public function CheckBinary($str): bool
	{
		return preg_match("^(0b)?[01]+$", $str);
	}
	
	// Принимает: строка даты в формате DD-MM-YYYY
	// Где DD,MM,YYYY - целые десятичные числа
	// DD - день (1-31)
	// MM - месяц (1-12)
	// YYYY - год, может быть любым, кроме 0000 (0001-9999)
	public function CheckDate($str): bool
	{
		return preg_match('/^\d{2}-\d{2}-\d{4}$/', $str);
	}
	
	// Принимает: действительное число в десятичном виде
	// В начале может стоять знак + или -
	// Далее от 1 до N цифр (0-9)
	// Далее знак разделителя дробной части (. или ,)
	// Далее от 0 до N цифр (0-9)
	public function CheckDecimal($str): bool
	{
		return preg_match('/^[+-]?\d+[.,]?\d*$/', $str);
	}
	
	// Принимает: Адрес IPv4
	// В каждом сегменте значения от 0 до 255
	// Правильно: 128.3.55.10, 0.0.0.0, 255.255.255.255
	// Неправильно: 260.30.5.1, a30.5.2.1
	public function CheckIP($str): bool
	{
		return preg_match('/^(((25[0-4])|(1\d{2,2})|(2[0-4]\d)|(\d{1,2}))\.){3}'.
						  '((25[0-4])|(1\d{2,2})|(2[0-4]\d)|(\d{1,2}))$/', $str);
	}
	
	// Принимает: обозначение цвета в HTML (с # или без): #ff00f4, 004cbb
	public function CheckHtmlColor($str): bool
	{
		return preg_match('/$\b#?[0-9A-Fa-f]{6,6}^/', $str);
	}
	
	// Принимает email, с поддержкой точек: john.doe@example.com
	public function Email($str): bool
	{
		return "/(^|\n)\w?[\w\.]+@\w+\.\w+(\s|\n|$)/";
	}
	
	// Проверка строки в CSV с инфо по книжке
	// Принимает: строку из CSV файла со следующим форматом:
	// ID;Заголовок;Издание;Издательство;ISBN;ГодИздания;
	// ISBN в формате EAN-13 имеет вид: 978-N-NNN-NNNNN-N, где N - цифра
	// при этом число цифр в каждом разряде может отличаться, но общая
	// их сумма должна быть 10, а кол-во сегментов - 5 (с учётом заголовка - 978)
	// Вместо 978 может быть 979
	public function CheckBookCSV($str): bool
	{
		return "/^\d+;\w+;\d+;\w+;\b(978|979)-\d+-\d+-\d+-\d+\b;\d+$/m";
	}
}

?>